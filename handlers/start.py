import types
from aiogram import Router, types, F
from aiogram.types import Message, ForceReply, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy import select

from data.database import session_factory
from data.models import User
from data.orm import ORM
from handlers.tasks import escape_md, get_tasks_button, get_task_list_handler

router = Router()

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
@router.message(F.text == "/start")
async def start_handler(message: Message):
    keyboard = get_tasks_button()  # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π
    await message.answer(escape_md('–ü—Ä–∏–≤–µ—Ç!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç day_helper_bot!\n–Ø –º–æ–≥—É —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á'), reply_markup=keyboard)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    user_id = message.from_user.id
    username = message.from_user.username
    async with session_factory() as session:
        stmt = select(User).where(User.user_id == user_id)
        result = await session.execute(stmt)
        existing_user = result.scalars().first()
        if not existing_user:
            await ORM.insert_users(User, user_id, username)
            await message.answer(escape_md("–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!"))
        else:
            await message.answer(escape_md("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!"))


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏"
@router.message(F.text == "üìã –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á–∏")
async def show_tasks_callback(message: Message):
    await get_task_list_handler(message)  # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
